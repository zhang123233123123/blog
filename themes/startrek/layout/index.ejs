<!-- Ultra Premium Hero Section -->
<section class="hero-premium">
    <!-- Animated Background -->
    <div class="hero-background-premium">
        <div class="cosmic-canvas">
            <canvas id="cosmicCanvas"></canvas>
        </div>
        <div class="gradient-orbs">
            <div class="orb orb-1"></div>
            <div class="orb orb-2"></div>
            <div class="orb orb-3"></div>
        </div>
        <div class="particle-field">
            <div class="particle" style="--x: 10%; --y: 20%; --delay: 0s;"></div>
            <div class="particle" style="--x: 80%; --y: 30%; --delay: 1s;"></div>
            <div class="particle" style="--x: 20%; --y: 70%; --delay: 2s;"></div>
            <div class="particle" style="--x: 90%; --y: 80%; --delay: 1.5s;"></div>
            <div class="particle" style="--x: 60%; --y: 15%; --delay: 0.5s;"></div>
            <div class="particle" style="--x: 30%; --y: 85%; --delay: 2.5s;"></div>
        </div>
        
        <!-- 3D Floating Elements -->
        <div class="floating-3d-elements">
            <div class="floating-cube cube-1"></div>
            <div class="floating-cube cube-2"></div>
            <div class="floating-sphere sphere-1"></div>
            <div class="floating-pyramid pyramid-1"></div>
        </div>
    </div>
    
    <!-- Hero Content -->
    <div class="hero-content-premium">
        <!-- Avatar Section -->
        <div class="hero-avatar">
            <div class="avatar-container-premium">
                <div class="avatar-ring-outer"></div>
                <div class="avatar-ring-middle"></div>
                <div class="avatar-ring-inner"></div>
                <div class="avatar-image-premium">
                    <div class="avatar-icon">
                        <svg viewBox="0 0 24 24" fill="currentColor">
                            <path d="M12 2C13.1 2 14 2.9 14 4C14 5.1 13.1 6 12 6C10.9 6 10 5.1 10 4C10 2.9 10.9 2 12 2ZM21 9V7L15 2V4H9V9H21ZM21 10H9V12H21V10ZM12 13C8.7 13 6 15.7 6 19V20H18V19C18 15.7 15.3 13 12 13Z"/>
                        </svg>
                    </div>
                </div>
                <div class="avatar-pulse"></div>
            </div>
        </div>
        
        <!-- Title Section -->
        <div class="hero-title-premium">
            <div class="title-container">
                <h1 class="main-title">
                    <span class="title-word" data-i18n="hero.title.line1">Zhang Hongjian's</span>
                    <span class="title-word gradient-premium" data-i18n="hero.title.line2">Tech Universe</span>
                </h1>
                <div class="title-underline"></div>
            </div>
        </div>
        
        <!-- Subtitle with typewriter effect -->
        <div class="hero-subtitle-premium">
            <p class="typewriter" id="typewriterText"></p>
        </div>
        
        <!-- Enhanced Stats -->
        <div class="hero-stats-premium">
            <div class="stat-card glass-ultra">
                <div class="stat-icon">
                    <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <circle cx="12" cy="12" r="10"/>
                        <polyline points="12,6 12,12 16,14"/>
                    </svg>
                </div>
                <div class="stat-content">
                    <span class="stat-number" data-count="5">0</span><span class="stat-plus">+</span>
                    <span class="stat-label" data-i18n="hero.stats.years">Years Experience</span>
                </div>
            </div>
            
            <div class="stat-card glass-ultra">
                <div class="stat-icon">
                    <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"/>
                    </svg>
                </div>
                <div class="stat-content">
                    <span class="stat-number" data-count="50">0</span><span class="stat-plus">+</span>
                    <span class="stat-label" data-i18n="hero.stats.projects">Projects</span>
                </div>
            </div>
            
            <div class="stat-card glass-ultra">
                <div class="stat-icon">
                    <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M12 2L2 7l10 5 10-5-10-5z"/>
                        <path d="M2 17l10 5 10-5"/>
                        <path d="M2 12l10 5 10-5"/>
                    </svg>
                </div>
                <div class="stat-content">
                    <span class="stat-number" data-count="10">0</span><span class="stat-plus">+</span>
                    <span class="stat-label" data-i18n="hero.stats.tech">Tech Stacks</span>
                </div>
            </div>
        </div>
        
        <!-- Premium Action Buttons -->
        <div class="hero-actions-premium">
            <a href="<%- url_for('/archives') %>" class="btn-premium btn-primary-premium">
                <span class="btn-text" data-i18n="hero.btn.primary">Explore Articles</span>
                <div class="btn-icon">
                    <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M13 2L3 14h9l-1 8 10-12h-9l1-8z"/>
                    </svg>
                </div>
                <div class="btn-shine"></div>
            </a>
            
            <a href="<%- url_for('/about') %>" class="btn-premium btn-secondary-premium">
                <span class="btn-text" data-i18n="hero.btn.secondary">About Me</span>
                <div class="btn-icon">
                    <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"/>
                        <circle cx="12" cy="7" r="4"/>
                    </svg>
                </div>
                <div class="btn-shine"></div>
            </a>
        </div>
        
        <!-- Scroll indicator -->
        <div class="scroll-indicator">
            <div class="scroll-text" data-i18n="hero.scroll">Scroll to explore</div>
            <div class="scroll-arrow">
                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <polyline points="6,9 12,15 18,9"/>
                </svg>
            </div>
        </div>
    </div>
</section>

<!-- Expertise Showcase -->
<section class="expertise-section">
    <div class="container">
        <!-- Section Header -->
        <div class="section-header-premium">
            <div class="header-badge">
                <span data-i18n="expertise.badge">Expertise</span>
            </div>
            <h2 class="section-title-premium" data-i18n="expertise.title">What I Specialize In</h2>
            <p class="section-description-premium" data-i18n="expertise.desc">
                Crafting digital experiences with cutting-edge technologies and innovative solutions
            </p>
        </div>
        
        <!-- 3D Tech Stack Showcase -->
        <div class="tech-stack-3d" id="techStack3D">
            <div class="tech-carousel">
                <div class="tech-layer front">
                    <div class="tech-item" data-tech="frontend">
                        <div class="tech-icon">
                            <svg viewBox="0 0 24 24" fill="currentColor">
                                <path d="M12 2L2 7l10 5 10-5-10-5z"/>
                                <path d="M2 17l10 5 10-5"/>
                                <path d="M2 12l10 5 10-5"/>
                            </svg>
                        </div>
                        <h3>Frontend</h3>
                        <div class="tech-tags">
                            <span>React</span>
                            <span>Vue.js</span>
                            <span>TypeScript</span>
                        </div>
                    </div>
                </div>
                
                <div class="tech-layer right">
                    <div class="tech-item" data-tech="backend">
                        <div class="tech-icon">
                            <svg viewBox="0 0 24 24" fill="currentColor">
                                <rect x="2" y="2" width="20" height="20" rx="2" ry="2"/>
                                <path d="M2 8h20"/>
                                <circle cx="8" cy="14" r="2"/>
                                <path d="M14 14h6"/>
                                <path d="M14 18h6"/>
                            </svg>
                        </div>
                        <h3>Backend</h3>
                        <div class="tech-tags">
                            <span>Node.js</span>
                            <span>Python</span>
                            <span>Java</span>
                        </div>
                    </div>
                </div>
                
                <div class="tech-layer back">
                    <div class="tech-item" data-tech="cloud">
                        <div class="tech-icon">
                            <svg viewBox="0 0 24 24" fill="currentColor">
                                <path d="M18 10h-1.26A8 8 0 1 0 9 20h9a5 5 0 0 0 0-10z"/>
                            </svg>
                        </div>
                        <h3>Cloud & DevOps</h3>
                        <div class="tech-tags">
                            <span>AWS</span>
                            <span>Docker</span>
                            <span>Kubernetes</span>
                        </div>
                    </div>
                </div>
                
                <div class="tech-layer left">
                    <div class="tech-item" data-tech="mobile">
                        <div class="tech-icon">
                            <svg viewBox="0 0 24 24" fill="currentColor">
                                <rect x="5" y="2" width="14" height="20" rx="2" ry="2"/>
                                <line x1="12" y1="18" x2="12.01" y2="18"/>
                            </svg>
                        </div>
                        <h3>Mobile Development</h3>
                        <div class="tech-tags">
                            <span>React Native</span>
                            <span>Flutter</span>
                            <span>Swift</span>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="tech-controls">
                <button class="tech-control" data-direction="prev">‹</button>
                <button class="tech-control" data-direction="next">›</button>
            </div>
        </div>
        
        <!-- Traditional Expertise Grid (Hidden by default) -->
        <div class="expertise-grid" style="display: none;">
            <div class="expertise-card" data-aos="fade-up" data-aos-delay="100">
                <div class="expertise-header">
                    <div class="expertise-icon mobile-dev">
                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <rect x="5" y="2" width="14" height="20" rx="2" ry="2"/>
                            <line x1="12" y1="18" x2="12.01" y2="18"/>
                        </svg>
                    </div>
                    <div class="expertise-meta">
                        <h3 class="expertise-title" data-i18n="expertise.mobile.title">Mobile Development</h3>
                        <div class="expertise-level">
                            <div class="level-bar">
                                <div class="level-fill" style="--level: 95%;"></div>
                            </div>
                            <span class="level-text">95%</span>
                        </div>
                    </div>
                </div>
                <p class="expertise-description" data-i18n="expertise.mobile.desc">
                    Creating stunning cross-platform mobile applications with native performance
                </p>
                <div class="expertise-tech">
                    <span class="tech-tag">React Native</span>
                    <span class="tech-tag">Flutter</span>
                    <span class="tech-tag">Swift</span>
                    <span class="tech-tag">Kotlin</span>
                </div>
                <div class="card-glow"></div>
            </div>
            
            <div class="expertise-card" data-aos="fade-up" data-aos-delay="200">
                <div class="expertise-header">
                    <div class="expertise-icon fullstack-dev">
                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <rect x="2" y="2" width="20" height="20" rx="2" ry="2"/>
                            <path d="M2 8h20"/>
                            <circle cx="8" cy="14" r="2"/>
                            <path d="M14 14h6"/>
                            <path d="M14 18h6"/>
                        </svg>
                    </div>
                    <div class="expertise-meta">
                        <h3 class="expertise-title" data-i18n="expertise.fullstack.title">Full Stack Development</h3>
                        <div class="expertise-level">
                            <div class="level-bar">
                                <div class="level-fill" style="--level: 90%;"></div>
                            </div>
                            <span class="level-text">90%</span>
                        </div>
                    </div>
                </div>
                <p class="expertise-description" data-i18n="expertise.fullstack.desc">
                    End-to-end web solutions from responsive frontends to scalable backends
                </p>
                <div class="expertise-tech">
                    <span class="tech-tag">React</span>
                    <span class="tech-tag">Node.js</span>
                    <span class="tech-tag">Python</span>
                    <span class="tech-tag">Docker</span>
                </div>
                <div class="card-glow"></div>
            </div>
            
            <div class="expertise-card" data-aos="fade-up" data-aos-delay="300">
                <div class="expertise-header">
                    <div class="expertise-icon cloud-dev">
                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <path d="M18 10h-1.26A8 8 0 1 0 9 20h9a5 5 0 0 0 0-10z"/>
                        </svg>
                    </div>
                    <div class="expertise-meta">
                        <h3 class="expertise-title" data-i18n="expertise.cloud.title">Cloud & DevOps</h3>
                        <div class="expertise-level">
                            <div class="level-bar">
                                <div class="level-fill" style="--level: 85%;"></div>
                            </div>
                            <span class="level-text">85%</span>
                        </div>
                    </div>
                </div>
                <p class="expertise-description" data-i18n="expertise.cloud.desc">
                    Modern cloud infrastructure and automated deployment pipelines
                </p>
                <div class="expertise-tech">
                    <span class="tech-tag">AWS</span>
                    <span class="tech-tag">Azure</span>
                    <span class="tech-tag">Kubernetes</span>
                    <span class="tech-tag">CI/CD</span>
                </div>
                <div class="card-glow"></div>
            </div>
            
            <div class="expertise-card" data-aos="fade-up" data-aos-delay="400">
                <div class="expertise-header">
                    <div class="expertise-icon ai-dev">
                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <path d="M22 12h-4l-3 9L9 3l-3 9H2"/>
                            <path d="M12 2v20"/>
                            <circle cx="12" cy="7" r="1"/>
                            <circle cx="12" cy="12" r="1"/>
                            <circle cx="12" cy="17" r="1"/>
                        </svg>
                    </div>
                    <div class="expertise-meta">
                        <h3 class="expertise-title" data-i18n="expertise.ai.title">AI & Data Science</h3>
                        <div class="expertise-level">
                            <div class="level-bar">
                                <div class="level-fill" style="--level: 80%;"></div>
                            </div>
                            <span class="level-text">80%</span>
                        </div>
                    </div>
                </div>
                <p class="expertise-description" data-i18n="expertise.ai.desc">
                    Intelligent systems and data-driven solutions using machine learning
                </p>
                <div class="expertise-tech">
                    <span class="tech-tag">Python</span>
                    <span class="tech-tag">TensorFlow</span>
                    <span class="tech-tag">PyTorch</span>
                    <span class="tech-tag">Analytics</span>
                </div>
                <div class="card-glow"></div>
            </div>
        </div>
    </div>
</section>

<!-- Featured Projects Showcase -->
<section class="projects-showcase">
    <div class="container">
        <div class="section-header-premium">
            <div class="header-badge">
                <span data-i18n="projects.badge">Portfolio</span>
            </div>
            <h2 class="section-title-premium" data-i18n="projects.title">Featured Projects</h2>
            <p class="section-description-premium" data-i18n="projects.desc">
                A collection of innovative solutions and creative implementations
            </p>
        </div>
        
        <div class="projects-grid">
            <div class="project-card featured" data-aos="zoom-in" data-aos-delay="100">
                <div class="project-image">
                    <div class="project-overlay">
                        <div class="project-tech-stack">
                            <span>React Native</span>
                            <span>Node.js</span>
                            <span>MongoDB</span>
                        </div>
                    </div>
                    <div class="project-placeholder mobile-app">
                        <svg viewBox="0 0 24 24" fill="currentColor">
                            <rect x="5" y="2" width="14" height="20" rx="2" ry="2"/>
                            <path d="M12 6h.01M8 14h8m-8 2h8"/>
                        </svg>
                    </div>
                </div>
                <div class="project-content">
                    <h3 class="project-title" data-i18n="projects.mobile.title">Smart Mobile Platform</h3>
                    <p class="project-description" data-i18n="projects.mobile.desc">
                        Cross-platform mobile application with AI-powered features
                    </p>
                    <div class="project-stats">
                        <div class="project-stat">
                            <span class="stat-value">50K+</span>
                            <span class="stat-label">Users</span>
                        </div>
                        <div class="project-stat">
                            <span class="stat-value">4.8★</span>
                            <span class="stat-label">Rating</span>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="project-card" data-aos="zoom-in" data-aos-delay="200">
                <div class="project-image">
                    <div class="project-overlay">
                        <div class="project-tech-stack">
                            <span>React</span>
                            <span>Python</span>
                            <span>AWS</span>
                        </div>
                    </div>
                    <div class="project-placeholder web-app">
                        <svg viewBox="0 0 24 24" fill="currentColor">
                            <rect x="2" y="3" width="20" height="14" rx="2" ry="2"/>
                            <line x1="8" y1="21" x2="16" y2="21"/>
                            <line x1="12" y1="17" x2="12" y2="21"/>
                        </svg>
                    </div>
                </div>
                <div class="project-content">
                    <h3 class="project-title" data-i18n="projects.web.title">Analytics Dashboard</h3>
                    <p class="project-description" data-i18n="projects.web.desc">
                        Real-time data visualization and business intelligence platform
                    </p>
                </div>
            </div>
            
            <div class="project-card" data-aos="zoom-in" data-aos-delay="300">
                <div class="project-image">
                    <div class="project-overlay">
                        <div class="project-tech-stack">
                            <span>Docker</span>
                            <span>Kubernetes</span>
                            <span>Jenkins</span>
                        </div>
                    </div>
                    <div class="project-placeholder devops">
                        <svg viewBox="0 0 24 24" fill="currentColor">
                            <path d="M18 10h-1.26A8 8 0 1 0 9 20h9a5 5 0 0 0 0-10z"/>
                            <circle cx="12" cy="12" r="2"/>
                        </svg>
                    </div>
                </div>
                <div class="project-content">
                    <h3 class="project-title" data-i18n="projects.devops.title">CI/CD Pipeline</h3>
                    <p class="project-description" data-i18n="projects.devops.desc">
                        Automated deployment and monitoring infrastructure
                    </p>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Latest Blog Posts -->
<section class="blog-section-premium">
    <div class="container">
        <div class="section-header-premium">
            <div class="header-badge">
                <span data-i18n="blog.badge">Knowledge</span>
            </div>
            <h2 class="section-title-premium" data-i18n="blog.title">Latest Insights</h2>
            <p class="section-description-premium" data-i18n="blog.desc">
                Sharing thoughts, discoveries, and technical insights from my development journey
            </p>
        </div>
        
        <div class="blog-timeline">
            <% site.posts.sort('date', -1).limit(6).each(function(post, index) { %>
                <article class="blog-card-timeline" data-aos="fade-<%= index % 2 === 0 ? 'right' : 'left' %>" data-aos-delay="<%= (index + 1) * 100 %>">
                    <div class="blog-image">
                        <% if (post.image) { %>
                            <img src="<%= post.image %>" alt="<%= post.title %>">
                        <% } else { %>
                            <div class="blog-placeholder">
                                <div class="placeholder-icon">
                                    <svg viewBox="0 0 24 24" fill="currentColor">
                                        <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"/>
                                        <polyline points="14,2 14,8 20,8"/>
                                        <line x1="16" y1="13" x2="8" y2="13"/>
                                        <line x1="16" y1="17" x2="8" y2="17"/>
                                    </svg>
                                </div>
                            </div>
                        <% } %>
                        <div class="blog-overlay">
                            <div class="read-time">
                                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                    <circle cx="12" cy="12" r="10"/>
                                    <polyline points="12,6 12,12 16,14"/>
                                </svg>
                                <span>5 min read</span>
                            </div>
                        </div>
                    </div>
                    
                    <div class="blog-content">
                        <div class="blog-meta">
                            <time datetime="<%= date(post.date, 'YYYY-MM-DD') %>">
                                <%= date(post.date, 'MMM DD, YYYY') %>
                            </time>
                            <% if (post.categories && post.categories.length) { %>
                                <span class="blog-category">
                                    <%= post.categories.data[0].name %>
                                </span>
                            <% } %>
                        </div>
                        
                        <h3 class="blog-title">
                            <a href="<%- url_for(post.path) %>"><%= post.title %></a>
                        </h3>
                        
                        <p class="blog-excerpt">
                            <%= truncate(strip_html(post.excerpt || post.content), 150) %>
                        </p>
                        
                        <div class="blog-footer">
                            <a href="<%- url_for(post.path) %>" class="read-more-premium">
                                <span data-i18n="blog.readmore">Continue Reading</span>
                                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                    <line x1="7" y1="17" x2="17" y2="7"/>
                                    <polyline points="7,7 17,7 17,17"/>
                                </svg>
                            </a>
                            
                            <% if (post.tags && post.tags.length) { %>
                                <div class="blog-tags">
                                    <% post.tags.limit(2).each(function(tag) { %>
                                        <span class="tag-premium">#<%= tag.name %></span>
                                    <% }) %>
                                </div>
                            <% } %>
                        </div>
                    </div>
                    <div class="card-glow"></div>
                    <div class="timeline-connector"></div>
                </article>
            <% }) %>
        </div>
        
        <div class="blog-cta">
            <a href="<%- url_for('/archives') %>" class="btn-premium btn-outline-premium">
                <span data-i18n="blog.viewall">View All Articles</span>
                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"/>
                </svg>
            </a>
        </div>
    </div>
</section>

<!-- Contact CTA Section -->
<section class="contact-cta-section">
    <div class="container">
        <div class="cta-container glass-luxury">
            <div class="cta-content">
                <div class="cta-icon">
                    <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"/>
                        <polyline points="22,6 12,13 2,6"/>
                    </svg>
                </div>
                <h2 class="cta-title" data-i18n="cta.title">Let's Build Something Amazing</h2>
                <p class="cta-description" data-i18n="cta.subtitle">
                    Ready to bring your ideas to life? Let's collaborate on your next project
                </p>
                <div class="cta-actions">
                    <a href="mailto:zhanghongjian@example.com" class="btn-premium btn-primary-premium">
                        <span data-i18n="cta.contact">Get In Touch</span>
                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <line x1="7" y1="17" x2="17" y2="7"/>
                            <polyline points="7,7 17,7 17,17"/>
                        </svg>
                    </a>
                    <a href="<%- url_for('/upload') %>" class="btn-premium btn-secondary-premium">
                        <span data-i18n="cta.share">Share Files</span>
                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"/>
                            <polyline points="7,10 12,15 17,10"/>
                            <line x1="12" y1="15" x2="12" y2="3"/>
                        </svg>
                    </a>
                </div>
            </div>
            <div class="cta-decoration">
                <div class="floating-element element-1"></div>
                <div class="floating-element element-2"></div>
                <div class="floating-element element-3"></div>
            </div>
        </div>
    </div>
</section>

<script>
// Enhanced Homepage Interactions
document.addEventListener('DOMContentLoaded', function() {
    initCosmicCanvas();
    initTypewriter();
    initCounters();
    initScrollEffects();
    initParallax();
    initAOS();
    init3DTechStack();
});

// Cosmic Canvas Animation
function initCosmicCanvas() {
    const canvas = document.getElementById('cosmicCanvas');
    if (!canvas) return;
    
    const ctx = canvas.getContext('2d');
    let width, height;
    const stars = [];
    const numStars = 200;
    
    function resize() {
        width = canvas.width = window.innerWidth;
        height = canvas.height = window.innerHeight;
    }
    
    function createStars() {
        for (let i = 0; i < numStars; i++) {
            stars.push({
                x: Math.random() * width,
                y: Math.random() * height,
                size: Math.random() * 2,
                speed: Math.random() * 0.5 + 0.1,
                opacity: Math.random()
            });
        }
    }
    
    function animateStars() {
        ctx.clearRect(0, 0, width, height);
        
        stars.forEach(star => {
            star.y += star.speed;
            if (star.y > height) {
                star.y = 0;
                star.x = Math.random() * width;
            }
            
            ctx.beginPath();
            ctx.arc(star.x, star.y, star.size, 0, Math.PI * 2);
            ctx.fillStyle = `rgba(233, 69, 96, ${star.opacity})`;
            ctx.fill();
        });
        
        requestAnimationFrame(animateStars);
    }
    
    resize();
    createStars();
    animateStars();
    
    window.addEventListener('resize', () => {
        resize();
        stars.length = 0;
        createStars();
    });
}

// Typewriter Effect
function initTypewriter() {
    const typewriter = document.getElementById('typewriterText');
    if (!typewriter) return;
    
    const texts = [
        'Exploring innovative technologies and sharing development insights...',
        '探索创新技术，分享开发心得...',
        'Building the future, one line of code at a time...',
        '用代码构建未来，用技术改变世界...'
    ];
    
    let textIndex = 0;
    let charIndex = 0;
    let isDeleting = false;
    
    function typeText() {
        const currentText = texts[textIndex];
        
        if (isDeleting) {
            typewriter.textContent = currentText.substring(0, charIndex - 1);
            charIndex--;
        } else {
            typewriter.textContent = currentText.substring(0, charIndex + 1);
            charIndex++;
        }
        
        if (!isDeleting && charIndex === currentText.length) {
            setTimeout(() => isDeleting = true, 2000);
        } else if (isDeleting && charIndex === 0) {
            isDeleting = false;
            textIndex = (textIndex + 1) % texts.length;
        }
        
        const speed = isDeleting ? 50 : 100;
        setTimeout(typeText, speed);
    }
    
    typeText();
}

// Counter Animation
function initCounters() {
    const counters = document.querySelectorAll('.stat-number[data-count]');
    
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting && !entry.target.classList.contains('counted')) {
                const target = entry.target;
                const count = parseInt(target.getAttribute('data-count'));
                let current = 0;
                
                const increment = count / 50;
                const timer = setInterval(() => {
                    current += increment;
                    if (current >= count) {
                        current = count;
                        clearInterval(timer);
                        target.classList.add('counted');
                    }
                    target.textContent = Math.floor(current);
                }, 40);
            }
        });
    }, { threshold: 0.5 });
    
    counters.forEach(counter => observer.observe(counter));
}

// Scroll Effects
function initScrollEffects() {
    let ticking = false;
    
    function updateScrollEffects() {
        const scrollTop = window.pageYOffset;
        const hero = document.querySelector('.hero-premium');
        
        if (hero) {
            const heroHeight = hero.offsetHeight;
            const scrollProgress = Math.min(scrollTop / heroHeight, 1);
            
            // Parallax for hero content
            const heroContent = hero.querySelector('.hero-content-premium');
            if (heroContent) {
                heroContent.style.transform = `translateY(${scrollProgress * 50}px)`;
                heroContent.style.opacity = 1 - scrollProgress * 0.5;
            }
            
            // Parallax for background elements
            const orbs = hero.querySelectorAll('.orb');
            orbs.forEach((orb, index) => {
                const speed = 0.5 + index * 0.2;
                orb.style.transform = `translateY(${scrollProgress * speed * 100}px)`;
            });
        }
        
        ticking = false;
    }
    
    function requestTick() {
        if (!ticking) {
            requestAnimationFrame(updateScrollEffects);
            ticking = true;
        }
    }
    
    window.addEventListener('scroll', requestTick, { passive: true });
}

// Parallax Mouse Movement
function initParallax() {
    const hero = document.querySelector('.hero-premium');
    if (!hero) return;
    
    hero.addEventListener('mousemove', (e) => {
        const { clientX, clientY } = e;
        const { innerWidth, innerHeight } = window;
        
        const xPos = (clientX / innerWidth) - 0.5;
        const yPos = (clientY / innerHeight) - 0.5;
        
        const orbs = hero.querySelectorAll('.orb');
        orbs.forEach((orb, index) => {
            const speed = (index + 1) * 0.5;
            orb.style.transform = `translate(${xPos * speed * 20}px, ${yPos * speed * 20}px)`;
        });
        
        const particles = hero.querySelectorAll('.particle');
        particles.forEach((particle, index) => {
            const speed = (index + 1) * 0.3;
            particle.style.transform = `translate(${xPos * speed * 15}px, ${yPos * speed * 15}px)`;
        });
    });
}

// Initialize AOS (Animate On Scroll)
function initAOS() {
    const elements = document.querySelectorAll('[data-aos]');
    
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                const element = entry.target;
                const animation = element.getAttribute('data-aos');
                const delay = element.getAttribute('data-aos-delay') || 0;
                
                setTimeout(() => {
                    element.classList.add('aos-animate');
                }, delay);
            }
        });
    }, { threshold: 0.1 });
    
    elements.forEach(el => observer.observe(el));
}

// 3D Tech Stack Animation
function init3DTechStack() {
    const techStack = document.getElementById('techStack3D');
    if (!techStack) return;
    
    const carousel = techStack.querySelector('.tech-carousel');
    const controls = techStack.querySelectorAll('.tech-control');
    let currentRotation = 0;
    let isAnimating = false;
    
    // Auto rotation
    function autoRotate() {
        if (!isAnimating) {
            rotate(90);
        }
    }
    
    // Rotate function
    function rotate(angle) {
        if (isAnimating) return;
        
        isAnimating = true;
        currentRotation += angle;
        
        carousel.style.transform = `rotateY(${currentRotation}deg)`;
        
        setTimeout(() => {
            isAnimating = false;
        }, 800);
    }
    
    // Control buttons
    controls.forEach(control => {
        control.addEventListener('click', () => {
            const direction = control.getAttribute('data-direction');
            const angle = direction === 'next' ? 90 : -90;
            rotate(angle);
        });
    });
    
    // Mouse interaction
    let isDragging = false;
    let startX = 0;
    let currentX = 0;
    
    carousel.addEventListener('mousedown', (e) => {
        isDragging = true;
        startX = e.clientX;
    });
    
    document.addEventListener('mousemove', (e) => {
        if (!isDragging) return;
        
        currentX = e.clientX;
        const deltaX = currentX - startX;
        
        if (Math.abs(deltaX) > 50) {
            const direction = deltaX > 0 ? -90 : 90;
            rotate(direction);
            isDragging = false;
        }
    });
    
    document.addEventListener('mouseup', () => {
        isDragging = false;
    });
    
    // Touch support for mobile
    let startTouchX = 0;
    
    carousel.addEventListener('touchstart', (e) => {
        startTouchX = e.touches[0].clientX;
    }, { passive: true });
    
    carousel.addEventListener('touchmove', (e) => {
        const currentTouchX = e.touches[0].clientX;
        const deltaX = currentTouchX - startTouchX;
        
        if (Math.abs(deltaX) > 50) {
            const direction = deltaX > 0 ? -90 : 90;
            rotate(direction);
            startTouchX = currentTouchX;
        }
    }, { passive: true });
    
    // Start auto rotation
    const autoRotateInterval = setInterval(autoRotate, 4000);
    
    // Pause on hover
    techStack.addEventListener('mouseenter', () => {
        clearInterval(autoRotateInterval);
    });
    
    // Resume on leave
    techStack.addEventListener('mouseleave', () => {
        setInterval(autoRotate, 4000);
    });
}
</script>